// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WrestleApplicationAPI.DbContexts;

#nullable disable

namespace WrestleApplicationAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240703123630_SecondMigrationCountryCityRelationship")]
    partial class SecondMigrationCountryCityRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WrestleApplicationAPI.Entities.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCity"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("NameCity")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdCity");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            IdCity = 1,
                            CountryId = 1,
                            NameCity = "Paris"
                        },
                        new
                        {
                            IdCity = 2,
                            CountryId = 1,
                            NameCity = "Marseille"
                        },
                        new
                        {
                            IdCity = 3,
                            CountryId = 2,
                            NameCity = "Milan"
                        },
                        new
                        {
                            IdCity = 4,
                            CountryId = 2,
                            NameCity = "Rome"
                        },
                        new
                        {
                            IdCity = 5,
                            CountryId = 3,
                            NameCity = "Wuhan"
                        },
                        new
                        {
                            IdCity = 6,
                            CountryId = 3,
                            NameCity = "Jinan"
                        },
                        new
                        {
                            IdCity = 7,
                            CountryId = 4,
                            NameCity = "Tokyo"
                        },
                        new
                        {
                            IdCity = 8,
                            CountryId = 4,
                            NameCity = "Osaka"
                        },
                        new
                        {
                            IdCity = 9,
                            CountryId = 5,
                            NameCity = "Alger"
                        },
                        new
                        {
                            IdCity = 10,
                            CountryId = 5,
                            NameCity = "Annaba"
                        },
                        new
                        {
                            IdCity = 11,
                            CountryId = 6,
                            NameCity = "Tzaneen"
                        },
                        new
                        {
                            IdCity = 12,
                            CountryId = 6,
                            NameCity = "Brits"
                        },
                        new
                        {
                            IdCity = 13,
                            CountryId = 7,
                            NameCity = "Washington"
                        },
                        new
                        {
                            IdCity = 14,
                            CountryId = 7,
                            NameCity = "Los Angeles"
                        },
                        new
                        {
                            IdCity = 15,
                            CountryId = 8,
                            NameCity = "Toronto"
                        },
                        new
                        {
                            IdCity = 16,
                            CountryId = 8,
                            NameCity = "Quebec"
                        },
                        new
                        {
                            IdCity = 17,
                            CountryId = 9,
                            NameCity = "Rio de Janeiro"
                        },
                        new
                        {
                            IdCity = 18,
                            CountryId = 9,
                            NameCity = "Sao Paulo"
                        },
                        new
                        {
                            IdCity = 19,
                            CountryId = 10,
                            NameCity = "Buenos Aires"
                        },
                        new
                        {
                            IdCity = 20,
                            CountryId = 10,
                            NameCity = "Santa Fe"
                        },
                        new
                        {
                            IdCity = 21,
                            CountryId = 11,
                            NameCity = "Sydney"
                        },
                        new
                        {
                            IdCity = 22,
                            CountryId = 11,
                            NameCity = "Darwin"
                        },
                        new
                        {
                            IdCity = 23,
                            CountryId = 12,
                            NameCity = "Wellington"
                        },
                        new
                        {
                            IdCity = 24,
                            CountryId = 12,
                            NameCity = "Auckland"
                        },
                        new
                        {
                            IdCity = 25,
                            CountryId = 13,
                            NameCity = "Antarctica"
                        });
                });

            modelBuilder.Entity("WrestleApplicationAPI.Entities.Continent", b =>
                {
                    b.Property<int>("IdContinent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContinent"));

                    b.Property<string>("NameContinent")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdContinent");

                    b.ToTable("Continents");

                    b.HasData(
                        new
                        {
                            IdContinent = 1,
                            NameContinent = "Europe"
                        },
                        new
                        {
                            IdContinent = 2,
                            NameContinent = "Asia"
                        },
                        new
                        {
                            IdContinent = 3,
                            NameContinent = "Africa"
                        },
                        new
                        {
                            IdContinent = 4,
                            NameContinent = "North America"
                        },
                        new
                        {
                            IdContinent = 5,
                            NameContinent = "South America"
                        },
                        new
                        {
                            IdContinent = 6,
                            NameContinent = "Oceania"
                        },
                        new
                        {
                            IdContinent = 7,
                            NameContinent = "Antarctica"
                        });
                });

            modelBuilder.Entity("WrestleApplicationAPI.Entities.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"));

                    b.Property<int>("ContinentId")
                        .HasColumnType("int");

                    b.Property<string>("FullNameCountry")
                        .IsRequired()
                        .HasMaxLength(170)
                        .HasColumnType("nvarchar(170)");

                    b.Property<string>("ShortNameCountry")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("UrlFlagCountry")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdCountry");

                    b.HasIndex("ContinentId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            IdCountry = 1,
                            ContinentId = 1,
                            FullNameCountry = "France",
                            ShortNameCountry = "FRA",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/c/c3/Flag_of_France.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 2,
                            ContinentId = 1,
                            FullNameCountry = "Italy",
                            ShortNameCountry = "ITA",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/0/03/Flag_of_Italy.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 3,
                            ContinentId = 2,
                            FullNameCountry = "China",
                            ShortNameCountry = "CHN",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/f/fa/Flag_of_the_People%27s_Republic_of_China.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 4,
                            ContinentId = 2,
                            FullNameCountry = "Japan",
                            ShortNameCountry = "JPN",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/9/9e/Flag_of_Japan.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 5,
                            ContinentId = 3,
                            FullNameCountry = "Algeria",
                            ShortNameCountry = "DZA",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/7/77/Flag_of_Algeria.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 6,
                            ContinentId = 3,
                            FullNameCountry = "South Africa",
                            ShortNameCountry = "ZAF",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/a/af/Flag_of_South_Africa.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 7,
                            ContinentId = 4,
                            FullNameCountry = "United States",
                            ShortNameCountry = "USA",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/a/a4/Flag_of_the_United_States.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 8,
                            ContinentId = 4,
                            FullNameCountry = "Canada",
                            ShortNameCountry = "CAN",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/c/cf/Flag_of_Canada.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 9,
                            ContinentId = 5,
                            FullNameCountry = "Brazil",
                            ShortNameCountry = "BRA",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/0/05/Flag_of_Brazil.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 10,
                            ContinentId = 5,
                            FullNameCountry = "Argentina",
                            ShortNameCountry = "ARG",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/1/1a/Flag_of_Argentina.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 11,
                            ContinentId = 6,
                            FullNameCountry = "Australia",
                            ShortNameCountry = "AUS",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/b/b9/Flag_of_Australia.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 12,
                            ContinentId = 6,
                            FullNameCountry = "New Zealand",
                            ShortNameCountry = "NZL",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/3/3e/Flag_of_New_Zealand.svg?uselang=fr"
                        },
                        new
                        {
                            IdCountry = 13,
                            ContinentId = 7,
                            FullNameCountry = "Antarctica",
                            ShortNameCountry = "ATA",
                            UrlFlagCountry = "https://upload.wikimedia.org/wikipedia/commons/b/bb/Proposed_flag_of_Antarctica_%28Graham_Bartram%29.svg?uselang=fr"
                        });
                });

            modelBuilder.Entity("WrestleApplicationAPI.Entities.City", b =>
                {
                    b.HasOne("WrestleApplicationAPI.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WrestleApplicationAPI.Entities.Country", b =>
                {
                    b.HasOne("WrestleApplicationAPI.Entities.Continent", "Continent")
                        .WithMany("Countries")
                        .HasForeignKey("ContinentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Continent");
                });

            modelBuilder.Entity("WrestleApplicationAPI.Entities.Continent", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("WrestleApplicationAPI.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
